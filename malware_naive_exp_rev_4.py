import pandas as pd
import collections
import re
from sklearn.model_selection import train_test_split
import lime
import sklearn
import numpy as np
import sklearn
import sklearn.ensemble
import sklearn.metrics
import sklearn.feature_extraction
from sklearn.naive_bayes import MultinomialNB
from lime import lime_text
from sklearn.pipeline import make_pipeline
from lime.lime_text import LimeTextExplainer
from sklearn.cross_validation import StratifiedKFold

data = pd.read_csv("new_api_call_6.csv")

data["c00"].apply(str)

#data

delete_label = ['Trojan-Ransom.Win32.Blocker', 'Trojan-Ransom.Win32.Gimemo', 'Trojan-Ransom.Win32.Birele', 'Trojan-Ransom.Win32.FakeInstaller', 'Trojan-Ransom.Win32.Digitala', 'Trojan-Ransom.Win32.Xorist', 'Trojan-Ransom.Win32.MBro', 'Trojan-Ransom.Win32.HmBlocker']

x_pre = []
y_pre = []
for _, row in data.iterrows():
    x_pre.append(row["result"])
    y_pre.append(row["c00"])

y = []
for i in y_pre:
    l = str(i).split(".")
    del l[-1]
    a = ".".join(l)
    y.append(a)


y_dict = collections.Counter(y)

class_names = []

class_names = ['Trojan-Ransom.Win32.Agent', 'Trojan-Ransom.Win32.Foreign', 'Trojan-Ransom.Win32.Mbro', 'Trojan-Ransom.Win32.PornoAsset']

x = []
for i in x_pre:
    a = re.sub("nan", "", i)
    x.append(a)

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.4)

vectorizer = sklearn.feature_extraction.text.TfidfVectorizer(lowercase=False)

train_vectors = vectorizer.fit_transform(x_train)
test_vectors = vectorizer.transform(x_test)

nb = MultinomialNB(alpha=.01)

nb.fit(train_vectors, y_train)

pred = nb.predict(test_vectors)

f_1 = sklearn.metrics.f1_score(y_test, pred, average='weighted')
print "f_1 is " + str(f_1)

c = make_pipeline(vectorizer, nb)

result_list = []
result_label = []

nb_success = 0
nb_fail = 0
for i in range(len(x_test)):
    explainer = LimeTextExplainer(class_names=class_names)
    exp = explainer.explain_instance(x_test[i], c.predict_proba, num_features=8)

    pred_label = exp.available_labels()

    if str(nb.predict(test_vectors[i]).reshape(1,-1)[0,0]) == y_test[i]:
        nb_success = nb_success + 1
    else:
        nb_fail = nb_fail + 1
    
    ans = exp.as_list()
    result_list.append(ans)
    res = str(nb.predict(test_vectors[i]).reshape(1,-1)[0,0]) + "_" + y_test[i]
    result_label.append(res)
    
print "nb_success " + str(nb_success)
print "nb_fail" + str(nb_fail)

with open("result_lime_3_data.txt", "w") as f_1, open("result_list_3_label.txt", "w") as f_2:
    for (i_1, i_2) in zip(result_list, result_label):
        haha = i_2.split("_")
        if haha[0] == haha[1]:
            f_2.write(i_2 + "\n")
            d = []
            for j in i_1:
                d.append(str(j[0]))
            s = "_".join(d)
            f_1.write(s + "\n")

        else:
            #print "Unmathed. Will be abort"
            continue

with open("result_lime_3_data.txt", "r") as f_1, open("result_list_3_label.txt", "r") as f_2, open("criteria.txt", "w") as f_3:
    data = []
    label = []

    data_1 = f_1.readlines()
    for i in data_1:
        t = i.strip()
        data.append(t)
    label_1 = f_2.readlines()
    for i in label_1:
        t = i.strip()
        label.append(t)

    if len(data) == len(label):
        Foreign = []
        Mbro = []
        Pornoasset = []
        Agent = []
        for (i_1, i_2) in zip(data, label):
            if re.compile("Foreign", re.IGNORECASE).search(i_2):
                Foreign.append(i_1)
            elif re.compile("Mbro", re.IGNORECASE).search(i_2):
                Mbro.append(i_1)
            elif re.compile("Pornoasset", re.IGNORECASE).search(i_2):
                Pornoasset.append(i_1)
            elif re.compile("Agent", re.IGNORECASE).search(i_2):
                Agent.append(i_1)
            else:
                print "sth wrong"
        F = "_".join(Foreign)
        M = "_".join(Mbro)
        P = "_".join(Pornoasset)
        A = "_".join(Agent)
        F_l = F.split("_")
        M_l = M.split("_")
        P_l = P.split("_")
        A_l = A.split("_")

        f_count = collections.Counter(F_l).most_common(8)
        m_count = collections.Counter(M_l).most_common(8)
        p_count = collections.Counter(P_l).most_common(8)
        a_count = collections.Counter(A_l).most_common(8)

        f_c = None
        m_c = None
        p_c = None
        a_c = None
        tmps_f = []
        tmps_m = []
        tmps_p = []
        tmps_a = []

        for i in f_count:
            tmps_f.append(i[0])
        for i in m_count:
            tmps_m.append(i[0])
        for i in p_count:
            tmps_p.append(i[0])
        for i in a_count:
            tmps_a.append(i[0])

        f_c = "_".join(tmps_f)
        m_c = "_".join(tmps_m)
        p_c = "_".join(tmps_p)
        a_c = "_".join(tmps_a)

        f_3.write("The Foreign is " + f_c)
        f_3.write("The Mbro is " + m_c)
        f_3.write("The PornoAsset is " + p_c)
        f_3.write("The Agent is " + a_c)

        f_c_list = f_c.split("_")
        m_c_list = m_c.split("_")  
        p_c_list = p_c.split("_")   
        a_c_list = a_c.split("_")   

        f_c_list_d = {}
        m_c_list_d = {}
        p_c_list_d = {}
        a_c_list_d = {}

        for i in f_c_list:
            f_c_list_d[i] = 0
        for i in m_c_list:
            m_c_list_d[i] = 0
        for i in p_c_list:
            p_c_list_d[i] = 0
        for i in a_c_list:
            a_c_list_d[i] = 0


        succeed = 0
        fail = 0
        for i, i_1 in zip(x_test, y_test):
            data = i.split()
            for j in f_c_list_d.keys():
                n = data.count(j)
                f_c_list_d[j] = n
            for j in m_c_list_d.keys():
                n = data.count(j)
                m_c_list_d[j] = n
            for j in p_c_list_d.keys():
                n = data.count(j)
                p_c_list_d[j] = n
            for j in a_c_list_d.keys():
                n = data.count(j)
                a_c_list_d[j] = n

            result_count_dict = {"Trojan-Ransom.Win32.Foreign":0, "Trojan-Ransom.Win32.Mbro":0, "Trojan-Ransom.Win32.PornoAsset":0, "Trojan-Ransom.Win32.Agent":0} 

            f_list = []
            m_list = []
            p_list = []
            a_list = []

            for j in f_c_list_d.values():
                #print j
                f_list.append(int(j))
                sumup = sum(f_list)
                result_count_dict["Trojan-Ransom.Win32.Foreign"] = sumup
            for j in m_c_list_d.values():
                #print j
                m_list.append(int(j))
                sumup = sum(m_list)
                result_count_dict["Trojan-Ransom.Win32.Mbro"] = sumup
            for j in p_c_list_d.values():
                #print j
                p_list.append(int(j))
                sumup = sum(p_list)
                result_count_dict["Trojan-Ransom.Win32.PornoAsset"] = sumup
            for j in a_c_list_d.values():
                #print j
                a_list.append(int(j))
                sumup = sum(a_list)
                result_count_dict["Trojan-Ransom.Win32.Agent"] = sumup
            result_list_com = []
            for k, v in sorted(result_count_dict.items(), key=lambda x:-x[1]):
                result_list_com.append(k)
            answer = result_list_com[0]
            if answer == i_1:
                succeed = succeed + 1
            else:
                fail = fail + 1

        print "succeed is " +  str(succeed)
        print "fail is " + str(fail)

        succeed_1 = 0
        fail_1 = 0
        for i, i_1 in zip(x_test, y_test):
            data = i.split()
            for j in f_c_list_d.keys():
                n = data.count(j)
                f_c_list_d[j] = n
            for j in m_c_list_d.keys():
                n = data.count(j)
                m_c_list_d[j] = n
            for j in p_c_list_d.keys():
                n = data.count(j)
                p_c_list_d[j] = n
            for j in a_c_list_d.keys():
                n = data.count(j)
                a_c_list_d[j] = n

            result_count_dict = {"Trojan-Ransom.Win32.Foreign":0, "Trojan-Ransom.Win32.Mbro":0, "Trojan-Ransom.Win32.PornoAsset":0, "Trojan-Ransom.Win32.Agent":0}
            f_list = []
            m_list = []
            p_list = []
            a_list = []            
 
            for j in f_c_list_d.values():
                #print j
                if int(j) == 0:
                    del result_count_dict["Trojan-Ransom.Win32.Foreign"]
                    break
                f_list.append(int(j))
                sumup = sum(f_list)
                result_count_dict["Trojan-Ransom.Win32.Foreign"] = sumup
            for j in m_c_list_d.values():
                #print j
                if int(j) == 0:
                    del result_count_dict["Trojan-Ransom.Win32.Mbro"]
                    break
                m_list.append(int(j))
                sumup = sum(m_list)
                result_count_dict["Trojan-Ransom.Win32.Mbro"] = sumup
            for j in p_c_list_d.values():
                #print j
                if int(j) == 0:
                    del result_count_dict["Trojan-Ransom.Win32.PornoAsset"]
                    break
                p_list.append(int(j))
                sumup = sum(p_list)
                result_count_dict["Trojan-Ransom.Win32.PornoAsset"] = sumup
            for j in a_c_list_d.values():
                #print j
                if int(j) == 0:
                    del result_count_dict["Trojan-Ransom.Win32.Agent"]
                    break
                a_list.append(int(j))
                sumup = sum(a_list)
                result_count_dict["Trojan-Ransom.Win32.Agent"] = sumup


            result_list_com = []
            if result_count_dict == {}:
                result_count_dict = {"Trojan-Ransom.Win32.Foreign":0, "Trojan-Ransom.Win32.Mbro":0, "Trojan-Ransom.Win32.PornoAsset":0, "Trojan-Ransom.Win32.Agent":0}
                #result_0 = {"Trojan-Ransom.Win32.Foreign":0, "Trojan-Ransom.Win32.Mbro":0, "Trojan-Ransom.Win32.PornoAsset":0, "Trojan-Ransom.Win32.Agent":0}
                f_list = []
                m_list = []
                p_list = []
                a_list = []
                for j in f_c_list_d.values():
                   # count_0 = 0
                   # if int(j) == 0:
                       # count_0 = count_0 + 1
                    #print j
                    f_list.append(int(j))
                    sumup = sum(f_list)
                    result_count_dict["Trojan-Ransom.Win32.Foreign"] = sumup
                   # result_0["Trojan-Ransom.Win32.Foreign"] = count_0
                for j in m_c_list_d.values():
                    #print j
                    m_list.append(int(j))
                    sumup = sum(m_list)
                    result_count_dict["Trojan-Ransom.Win32.Mbro"] = sumup
                for j in p_c_list_d.values():
                    #print j
                    p_list.append(int(j))
                    sumup = sum(p_list)
                    result_count_dict["Trojan-Ransom.Win32.PornoAsset"] = sumup
                for j in a_c_list_d.values():
                    #print j
                    a_list.append(int(j))
                    sumup = sum(a_list)
                    result_count_dict["Trojan-Ransom.Win32.Agent"] = sumup


            for k, v in sorted(result_count_dict.items(), key=lambda x:-x[1]):
                result_list_com.append(k)
            answer = result_list_com[0]
            if answer == i_1:
                succeed_1 = succeed_1 + 1
            else:
                fail_1 = fail_1 + 1

        print "second succeed is " +  str(succeed_1)
        print "second fail is " + str(fail_1)

        succeed_2 = 0
        fail_2 = 0
        for i, i_1 in zip(x_test, y_test):
            data = i.split()
            for j in f_c_list_d.keys():
                n = data.count(j)
                f_c_list_d[j] = n
            for j in m_c_list_d.keys():
                n = data.count(j)
                m_c_list_d[j] = n
            for j in p_c_list_d.keys():
                n = data.count(j)
                p_c_list_d[j] = n
            for j in a_c_list_d.keys():
                n = data.count(j)
                a_c_list_d[j] = n

            result_count_dict = {"Trojan-Ransom.Win32.Foreign":0, "Trojan-Ransom.Win32.Mbro":0, "Trojan-Ransom.Win32.PornoAsset":0, "Trojan-Ransom.Win32.Agent":0}
            f_list = []
            m_list = []
            p_list = []
            a_list = []            
 
            for j in f_c_list_d.values():
                #print j
                if int(j) == 0:
                    del result_count_dict["Trojan-Ransom.Win32.Foreign"]
                    break
                f_list.append(int(j))
                sumup = sum(f_list)
                result_count_dict["Trojan-Ransom.Win32.Foreign"] = sumup
            for j in m_c_list_d.values():
                #print j
                if int(j) == 0:
                    del result_count_dict["Trojan-Ransom.Win32.Mbro"]
                    break
                m_list.append(int(j))
                sumup = sum(m_list)
                result_count_dict["Trojan-Ransom.Win32.Mbro"] = sumup
            for j in p_c_list_d.values():
                #print j
                if int(j) == 0:
                    del result_count_dict["Trojan-Ransom.Win32.PornoAsset"]
                    break
                p_list.append(int(j))
                sumup = sum(p_list)
                result_count_dict["Trojan-Ransom.Win32.PornoAsset"] = sumup
            for j in a_c_list_d.values():
                #print j
                if int(j) == 0:
                    del result_count_dict["Trojan-Ransom.Win32.Agent"]
                    break
                a_list.append(int(j))
                sumup = sum(a_list)
                result_count_dict["Trojan-Ransom.Win32.Agent"] = sumup

            result_list_com = []
            if result_count_dict == {}:
                result_count_dict = {"Trojan-Ransom.Win32.Foreign":0, "Trojan-Ransom.Win32.Mbro":0, "Trojan-Ransom.Win32.PornoAsset":0, "Trojan-Ransom.Win32.Agent":0}
                result_0 = {"Trojan-Ransom.Win32.Foreign":0, "Trojan-Ransom.Win32.Mbro":0, "Trojan-Ransom.Win32.PornoAsset":0, "Trojan-Ransom.Win32.Agent":0}
                f_list = []
                m_list = []
                p_list = []
                a_list = []
                count_0 = None
                for j in f_c_list_d.values():
                    count_0 = 0
                    if int(j) == 0:
                        count_0 = count_0 + 1
                    f_list.append(int(j))
                    sumup = sum(f_list)
                    result_count_dict["Trojan-Ransom.Win32.Foreign"] = sumup
                    result_0["Trojan-Ransom.Win32.Foreign"] = count_0
                for j in m_c_list_d.values():
                    count_0 = 0
                    if int(j) == 0:
                        count_0 = count_0 + 1
                    #print j
                    m_list.append(int(j))
                    sumup = sum(m_list)
                    result_count_dict["Trojan-Ransom.Win32.Mbro"] = sumup
                    result_0["Trojan-Ransom.Win32.Mbro"] = count_0
                for j in p_c_list_d.values():
                    #print j
                    count_0 = 0
                    if int(j) == 0:
                        count_0 = count_0 + 1
                    p_list.append(int(j))
                    sumup = sum(p_list)
                    result_count_dict["Trojan-Ransom.Win32.PornoAsset"] = sumup
                    result_0["Trojan-Ransom.Win32.PornoAsset"] = count_0
                for j in a_c_list_d.values():
                    count_0 = 0
                    if int(j) == 0:
                        count_0 = count_0 + 1
                    a_list.append(int(j))
                    sumup = sum(a_list)
                    result_count_dict["Trojan-Ransom.Win32.Agent"] = sumup
                    result_0["Trojan-Ransom.Win32.Agent"] = count_0

                # sorting result_0
                result_0_com = []
                for k, v in sorted(result_0.items(), key=lambda x:x[1]):
                    result_0_com.append(k)

                del result_count_dict[result_0_com[-1]]

                for k, v in sorted(result_count_dict.items(), key=lambda x:-x[1]):
                    result_list_com.append(k)
                answer = result_list_com[0]
                if answer == i_1:
                    succeed_2 = succeed_2 + 1
                else:
                    fail_2 = fail_2 + 1
            else:
                for k, v in sorted(result_count_dict.items(), key=lambda x:-x[1]):
                    result_list_com.append(k)
                answer = result_list_com[0]
                if answer == i_1:
                    succeed_2 = succeed_2 + 1
                else:
                    fail_2 = fail_2 + 1

        print "third succeed is " +  str(succeed_2)
        print "third fail is " + str(fail_2)

